@startuml sdk l2

enum Layer2Type {
  ZK_SYNC = 'ZK_SYNC'
  LOOPRING = 'LRC'
}

enum OperationType {
  Deposit = "Deposit",
  Transfer = "Transfer",
  Withdrawal = "Withdrawal",
}

class Operation {
  type: OperationType
  toAddress: string
  amount: string
  fee: string
  tokenSymbol: string
}

class Deposit {
}
Operation <|-- Deposit
class TokenDeposit {
  approveForErc20: bool
}
Deposit <|-- TokenDeposit

class Transfer {
}
Operation <|-- Transfer
class TokenTransfer {
}
Transfer <|-- TokenTransfer

class Withdrawal {
}
Operation <|-- Withdrawal
class TokenWithdrawal {
}
Withdrawal <|-- TokenWithdrawal

class Result {
  async getReceipt(): Receipt
  async getReceiptVerify(): Receipt
}

class Receipt {
  operationType: OperationType
  from?: string
  to: string
  tokenSymbol: string
  amount: string
  fee: string
  blockNumber?: number
  hash?: string
  createdAt?: string
  failReason?: string
  committed?: boolean
  verified?: boolean
}

interface Layer2Manager {
  getBalance(layer2Type: Layer2Type, tokenSymbol: string): string
  getBalanceVerified(layer2Type: Layer2Type, tokenSymbol: string): string

  getProviderByLayer2Type(layer2Type: Layer2Type): Layer2Provider
  getProviderByName(name: string)
  registerProvider(provider: Layer2Provider): boolean
  getProviders(): Set<Layer2Provider>
}

interface Layer2Provider {
  + getName(): string
  + getDescription(): string

  + getNetwork(): Network;

  + getSupportedLayer2Type(): Layer2Type
  + getSupportedTokens(): Set<string>
  + getLayer2WalletBuilder(): Layer2WalletBuilder

  + getWithdrawalFee(toAddress: string, tokenSymbol: string): string
  + getTransferFee(toAddress: string, tokenSymbol: string): string

  + getReceipt(txHash: string): Receipt;
  + getAccountHistory(address: string): Receipt;

  + disconnect(): void;
}

Layer2Manager "1" - "1..*" Layer2Provider

interface Layer2WalletBuilder {
  + getNetwork(): Network;

  + fromMnemonic(words: string): Layer2Wallet;
  + fromOptions(options: object): Layer2Wallet;
}

Layer2Provider "1" - "1" Layer2WalletBuilder

interface Layer2Wallet {
  + getNetwork(): Network;

  + getAddress(): string;

  + getBalance(): string;
  + getBalanceVerified(): string;
  + getTokenBalance(tokenSymbol: string): string;
  + getTokenBalanceVerified(tokenSymbol: string): string;
  + getAccountBalances(): [string, string, AccountBalanceState][];
  + getAccountTokenBalances(): AccountBalances;

  + deposit(deposit: Deposit): Result;

  + transfer(transfer: Transfer): Result;

  + withdraw(withdrawal: Withdrawal): Result;

  + getAccountStream(): AccountStream;
}

Layer2WalletBuilder "1" - "0..*" Layer2Wallet


@enduml
